gen m1 : 2 -> 1 "ff00ff"
gen u1 : 0 -> 1
gen n1 : 1 -> 2
gen v1 : 1 -> 0

gen m2 : 2 -> 1
gen u2 : 0 -> 1
gen n2 : 1 -> 2
gen v2 : 1 -> 0

import ssfa as F1(m=m1, u=u1, n=n1, v=v1)
import ssfa as F2(m=m2, u=u2, n=n2, v=v2)
import hopf as H1(m=m1, u=u1, n=n2, v=v2)
import hopf as H2(m=m2, u=u2, n=n1, v=v1)

let m1_t2 = (F2.cup * F2.cup ; id * sw * id ; id * id * m1) * id ; id * id * F2.cap

def d = id * F1.cup ; F2.cap * id

rule d_anti_hm : m1 ; d = d * d ; sw ; m1

rewrite d_flip :
  d * d ; sw ; m1 ; v1
  = m1 ; d ; v1 by -d_anti_hm



