gen f : 1 -> 1
gen g : 1 -> 1
rule ff: f ; f = f
rule gg: g ; g = g


# rewrite-only theorem
rewrite rwfoo: f ; f ; f
  = f ; f by ff
  = f by ff

# theorem with apply-style proof
theorem foo: f ; f; f ; f ; g = f ; g ; g
proof
  apply simp(ff)
  apply rule(-gg)
qed

# theorem with rewrite-style proof
theorem bar: f ; f; f = f
proof
  rewrite LHS
    = f ; f by ff
    = f by ff
qed

# theorem with mixed proof
theorem baz: f ; f ; f; f = f
proof
  rewrite LHS
    = f ; f ; f by ff
    = f ; f by ff
  apply simp(ff)
qed